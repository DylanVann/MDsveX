name: mdsvex

on:
  push:
    paths-ignore:
      - 'site/**'
  pull_request:
    paths-ignore:
      - 'site/**'

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: lint-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       lint-yarn-
      - run: curl -L https://unpkg.com/@pnpm/self-installer | node
      - run: pnpm i --frozen-lockfile
      - run: pnpm lint
        env:
          CI: true
          name: mdsvex

  build-test:
    name: test-build - node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10, 12]
        os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"
      # - uses: actions/cache@v2
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      - run: curl -L https://unpkg.com/@pnpm/self-installer | node
      - run: pnpm i --frozen-lockfile
      - run: npm test
      - run: pnpm build --filter mdsvex
        env:
          CI: true
          name: mdsvex

  build-test-win:
    name: test-build - node ${{ matrix.node-version }} (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10, 12]
        os: [windows-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get pnpm store directory path
        id: pnpm-store-dir-path
        run: echo "::set-output name=D:\.pnpm-store\v3"
      - uses: actions/cache@v2
        id: pnpm-store # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: D:\.pnpm-store\v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-
      - uses: pnpm/action-setup@v1.2.0
        with:
          version: 5
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
      - run: npm test
      - run: pnpm build --filter mdsvex
        env:
          CI: true
          name: mdsvex
